메소드의 집합 : 라이브러리
라이브러리의 집합 : 패키지
패키지의 집합 : 모듈

프레임워크
- 웹페이지를 개발하는데에 나타나는 어려움을 줄이는 것이 주목적, 대표적으로 db연동, 템플릿형태의 표준, 세션 관리, 코드재사용등의 기능

spring
-

django
-

jsp
- java server page

의존성(숙제)
-

의존성 주입(숙제)
- 1. DI 지원 : 의존성주입(= Ioc (Inversion of Control : 제어역행))
  => DI는 스프링 컨테이너가 지원하는 핵심 개념 중 하나
  => DI는 객체 사이의 의존 관계를 객체 자신이 아닌 외부의 조립기(스프링 컨테이너)가 수행한다는 개념이다.
  => 스프링은 설정 파일이나 어노테이션을 이용하여 객체 간의 의존 관계를 설정할 수 있다.
``
/* 의존하는 객체를 코드에 직접 명시하는 경우 */
A has a B. (A는 B에 의존한다.)
=>의존하는 객체를 취할 때 사용하는 클래스(A)측에서 호출. 이를 제어순행이라고 함
DI는 의존하는 객체에 대한 취득(획득)의 책임이 사용하는 class에 있지 않고 스프링 컨테이너가 제공(주입)해 준다.
즉, A class에서 B class의 메소드를 사용하기 위해서는 B b = new B();를 통해 B class의 instance인 b를 생성해야 하는데 스프링의 DI는 A class를 생성할 때 B class의 instance(객체)를 생성하여 주입까지 해주는 기능. 그러므로 개발자는 A class에서 B b = new B();라는 식의 코드를 작성할 필요가 없이 스프링 컨테이너가 만들어 놓은 instance(bean)를 가지고 와서 사용만 하면 됨.(xml 설정을 통해서)
출처: http://snoopy81.tistory.com/166 [영혼과영혼의양식]

메이븐
- 자바프로젝트의 빌드를 자동화해주는 빌드 툴(빌드 : 컴파일된 소스코드를 컴퓨터에서 실행가능한 파일로 만드는 것)
- 즉, 자바 소스를 컴파일하고, 패키지에서 deploy하는 일을 자동화 해주는 것

REST API
(Representional State Transfer)
- 웹(http) 설계의 우수성을 제대로 사용하기 위하여 아키텍쳐로써 REST를 발표하였다.
- 시스템 아키텍처 : 시스템이 어떻게 작동하는지를 설명하는 프레임 워크

REDIS
- 오픈소스 기반의 비관계형 DB관리 시스템
- 세션관리 디비

JPA
- 애플리케이션과 JDBC 사이에서 동작하는 도구

JDBC(JAVA DATABASE CONNECTIVITY)
- 자바에서 데이터베이스에 접속할 수 있도록 하는 자바 인터페이스(인터페이스가 중요!)

스타터
- SPRING에서 제공되는 편리한 의존성 집합체
